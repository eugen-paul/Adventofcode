package net.eugenpaul.adventofcode.y2019.day20;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.util.List;

import org.junit.jupiter.api.Test;

import net.eugenpaul.adventofcode.helper.FileReaderHelper;

class Day20Test {

    @Test
    void testTest2019Day20_testPuzzle_1() {
        testPuzzle1(List.of(//
                "         A           ", //
                "         A           ", //
                "  #######.#########  ", //
                "  #######.........#  ", //
                "  #######.#######.#  ", //
                "  #######.#######.#  ", //
                "  #######.#######.#  ", //
                "  #####  B    ###.#  ", //
                "BC...##  C    ###.#  ", //
                "  ##.##       ###.#  ", //
                "  ##...DE  F  ###.#  ", //
                "  #####    G  ###.#  ", //
                "  #########.#####.#  ", //
                "DE..#######...###.#  ", //
                "  #.#########.###.#  ", //
                "FG..#########.....#  ", //
                "  ###########.#####  ", //
                "             Z       ", //
                "             Z       " //
        ), 23, 26);
    }

    @Test
    void testTest2019Day20_testPuzzle_2() {
        testPuzzle1(List.of(//
                "                   A               ", //
                "                   A               ", //
                "  #################.#############  ", //
                "  #.#...#...................#.#.#  ", //
                "  #.#.#.###.###.###.#########.#.#  ", //
                "  #.#.#.......#...#.....#.#.#...#  ", //
                "  #.#########.###.#####.#.#.###.#  ", //
                "  #.............#.#.....#.......#  ", //
                "  ###.###########.###.#####.#.#.#  ", //
                "  #.....#        A   C    #.#.#.#  ", //
                "  #######        S   P    #####.#  ", //
                "  #.#...#                 #......VT", //
                "  #.#.#.#                 #.#####  ", //
                "  #...#.#               YN....#.#  ", //
                "  #.###.#                 #####.#  ", //
                "DI....#.#                 #.....#  ", //
                "  #####.#                 #.###.#  ", //
                "ZZ......#               QG....#..AS", //
                "  ###.###                 #######  ", //
                "JO..#.#.#                 #.....#  ", //
                "  #.#.#.#                 ###.#.#  ", //
                "  #...#..DI             BU....#..LF", //
                "  #####.#                 #.#####  ", //
                "YN......#               VT..#....QG", //
                "  #.###.#                 #.###.#  ", //
                "  #.#...#                 #.....#  ", //
                "  ###.###    J L     J    #.#.###  ", //
                "  #.....#    O F     P    #.#...#  ", //
                "  #.###.#####.#.#####.#####.###.#  ", //
                "  #...#.#.#...#.....#.....#.#...#  ", //
                "  #.#####.###.###.#.#.#########.#  ", //
                "  #...#.#.....#...#.#.#.#.....#.#  ", //
                "  #.###.#####.###.###.#.#.#######  ", //
                "  #.#.........#...#.............#  ", //
                "  #########.###.###.#############  ", //
                "           B   J   C               ", //
                "           U   P   P               " //
        ), 58, 0);
    }

    @Test
    void testTest2019Day20_testPuzzle_3() {
        testPuzzle1(List.of(//
                "             Z L X W       C                 ", //
                "             Z P Q B       K                 ", //
                "  ###########.#.#.#.#######.###############  ", //
                "  #...#.......#.#.......#.#.......#.#.#...#  ", //
                "  ###.#.#.#.#.#.#.#.###.#.#.#######.#.#.###  ", //
                "  #.#...#.#.#...#.#.#...#...#...#.#.......#  ", //
                "  #.###.#######.###.###.#.###.###.#.#######  ", //
                "  #...#.......#.#...#...#.............#...#  ", //
                "  #.#########.#######.#.#######.#######.###  ", //
                "  #...#.#    F       R I       Z    #.#.#.#  ", //
                "  #.###.#    D       E C       H    #.#.#.#  ", //
                "  #.#...#                           #...#.#  ", //
                "  #.###.#                           #.###.#  ", //
                "  #.#....OA                       WB..#.#..ZH", //
                "  #.###.#                           #.#.#.#  ", //
                "CJ......#                           #.....#  ", //
                "  #######                           #######  ", //
                "  #.#....CK                         #......IC", //
                "  #.###.#                           #.###.#  ", //
                "  #.....#                           #...#.#  ", //
                "  ###.###                           #.#.#.#  ", //
                "XF....#.#                         RF..#.#.#  ", //
                "  #####.#                           #######  ", //
                "  #......CJ                       NM..#...#  ", //
                "  ###.#.#                           #.###.#  ", //
                "RE....#.#                           #......RF", //
                "  ###.###        X   X       L      #.#.#.#  ", //
                "  #.....#        F   Q       P      #.#.#.#  ", //
                "  ###.###########.###.#######.#########.###  ", //
                "  #.....#...#.....#.......#...#.....#.#...#  ", //
                "  #####.#.###.#######.#######.###.###.#.#.#  ", //
                "  #.......#.......#.#.#.#.#...#...#...#.#.#  ", //
                "  #####.###.#####.#.#.#.#.###.###.#.###.###  ", //
                "  #.......#.....#.#...#...............#...#  ", //
                "  #############.#.#.###.###################  ", //
                "               A O F   N                     ", //
                "               A A D   M                     " //
        ), 77, 396);
    }

    private void testPuzzle1(List<String> inputData, int wayAZ, int wayAZ2) {
        Day20 event = new Day20();

        event.setDoStep2(wayAZ2 != 0);

        assertTrue(event.doEvent(inputData));
        assertEquals(wayAZ, event.getWayAZ());
        assertEquals(wayAZ2, event.getWayAZ2());
    }

    @Test
    void testSolution2019Day20() {
        Day20 event = new Day20();

        List<String> eventData = FileReaderHelper.readListStringFromFile("y2019/day20/puzzle1.txt");
        assertTrue(event.doPuzzleFromData(eventData));
        assertEquals(568, event.getWayAZ());
        assertEquals(6546, event.getWayAZ2());
    }

}
